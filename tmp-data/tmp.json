[
  {
    "timestamp": "2016-11-14T09:36:21.000Z",
    "stackName": "AUDIT-AWS-ELB-TEST-DEFAULT",
    "runId": "a8ad4c59-2504-4711-8102-2e5eae0f6660",
    "resourceType": "coreo_aws_advisor_alert",
    "resourceName": "elb-inventory",
    "resourceId": "5a284d4e3a07bbb3c6e2a5b06262665837950fffdc1b75be83582522fa91b579",
    "outputs": [
      {
        "value": "cc_582984ea08f_elb-inventory",
        "name": "ec2_name"
      }
    ],
    "namespace": "ROOT::AUDIT-AWS-ELB-TEST-DEFAULT",
    "inputs": [
      {
        "type": "choice",
        "value": "define",
        "name": "action"
      },
      {
        "type": "PLA-1366",
        "value": "ELB Object Inventory",
        "name": "display_name"
      },
      {
        "type": "PLA-1366",
        "value": "elb",
        "name": "service"
      },
      {
        "type": "PLA-1366",
        "value": [
          "(?-mix:)"
        ],
        "name": "alert_when"
      },
      {
        "type": "PLA-1366",
        "value": [
          "load_balancers"
        ],
        "name": "objectives"
      },
      {
        "type": "PLA-1366",
        "value": "Information",
        "name": "level"
      },
      {
        "type": "PLA-1366",
        "value": [
          "=~"
        ],
        "name": "operators"
      },
      {
        "type": "PLA-1366",
        "value": "This rule performs an inventory on all ELB's in the target AWS account.",
        "name": "description"
      },
      {
        "type": "PLA-1366",
        "value": "Inventory",
        "name": "category"
      },
      {
        "type": "PLA-1366",
        "value": "None.",
        "name": "suggested_action"
      },
      {
        "type": "PLA-1366",
        "value": [],
        "name": "call_modifiers"
      },
      {
        "type": "PLA-1366",
        "value": [
          "load_balancer_descriptions.load_balancer_name"
        ],
        "name": "audit_objects"
      }
    ],
    "executionTime": 11.443736742,
    "executionNumber": 1,
    "engineStatus": "OK",
    "dataType": "ADVISOR_RESOURCE",
    "_id": "58298596d43b2e279ae998d3"
  },
  {
    "timestamp": "2016-11-14T09:36:29.000Z",
    "stackName": "AUDIT-AWS-ELB-TEST-DEFAULT",
    "runId": "a8ad4c59-2504-4711-8102-2e5eae0f6660",
    "resourceType": "coreo_aws_advisor_alert",
    "resourceName": "elb-old-ssl-policy",
    "resourceId": "62e7f595945b0041938c635e9e5bef03f00a6aa4fdc1a994697838454e791e8a",
    "outputs": [
      {
        "value": "cc_582984ea08f_elb-old-ssl-policy",
        "name": "ec2_name"
      },
      {
        "value": true,
        "name": "included"
      }
    ],
    "namespace": "ROOT::AUDIT-AWS-ELB-TEST-DEFAULT",
    "inputs": [
      {
        "type": "choice",
        "value": "define",
        "name": "action"
      },
      {
        "type": "PLA-1366",
        "value": "ELB is using old SSL policy",
        "name": "display_name"
      },
      {
        "type": "PLA-1366",
        "value": "elb",
        "name": "service"
      },
      {
        "type": "PLA-1366",
        "value": [
          "(?i-mx:ELBSecurityPolicy-2016-08)"
        ],
        "name": "alert_when"
      },
      {
        "type": "PLA-1366",
        "value": [
          "load_balancers"
        ],
        "name": "objectives"
      },
      {
        "type": "PLA-1366",
        "value": "http://kb.cloudcoreo.com/mydoc_elb-old-ssl-policy.html",
        "name": "link"
      },
      {
        "type": "PLA-1366",
        "value": "Critical",
        "name": "level"
      },
      {
        "type": "PLA-1366",
        "value": [
          "!~"
        ],
        "name": "operators"
      },
      {
        "type": "PLA-1366",
        "value": "Elastic Load Balancing (ELB) SSL policy is not the latest Amazon predefined SSL policy or is a custom ELB SSL policy.",
        "name": "description"
      },
      {
        "type": "PLA-1366",
        "value": "Security",
        "name": "category"
      },
      {
        "type": "PLA-1366",
        "value": "Always use the current AWS predefined security policy.",
        "name": "suggested_action"
      },
      {
        "type": "PLA-1366",
        "value": [],
        "name": "call_modifiers"
      },
      {
        "type": "PLA-1366",
        "value": [
          "load_balancer_descriptions.listener_descriptions.policy_names"
        ],
        "name": "audit_objects"
      }
    ],
    "executionTime": 1.473712859,
    "executionNumber": 2,
    "engineStatus": "OK",
    "dataType": "ADVISOR_RESOURCE",
    "_id": "58298599d43b2e279ae998d4"
  },
  {
    "timestamp": "2016-11-14T09:36:27.000Z",
    "stackName": "AUDIT-AWS-ELB-TEST-DEFAULT",
    "runId": "a8ad4c59-2504-4711-8102-2e5eae0f6660",
    "resourceType": "coreo_aws_advisor_alert",
    "resourceName": "elb-current-ssl-policy",
    "resourceId": "2c3626e742a0a7ce16d5e5c44b873a5452b972505aa2ee0327363fb1645f4b93",
    "outputs": [
      {
        "value": "cc_582984ea08f_elb-current-ssl-policy",
        "name": "ec2_name"
      }
    ],
    "namespace": "ROOT::AUDIT-AWS-ELB-TEST-DEFAULT",
    "inputs": [
      {
        "type": "choice",
        "value": "define",
        "name": "action"
      },
      {
        "type": "PLA-1366",
        "value": "ELB is using current SSL policy",
        "name": "display_name"
      },
      {
        "type": "PLA-1366",
        "value": "elb",
        "name": "service"
      },
      {
        "type": "PLA-1366",
        "value": [
          "ELBSecurityPolicy-2016-08"
        ],
        "name": "alert_when"
      },
      {
        "type": "PLA-1366",
        "value": [
          "load_balancers"
        ],
        "name": "objectives"
      },
      {
        "type": "PLA-1366",
        "value": "Information",
        "name": "level"
      },
      {
        "type": "PLA-1366",
        "value": [
          "=="
        ],
        "name": "operators"
      },
      {
        "type": "PLA-1366",
        "value": "Elastic Load Balancing (ELB) SSL policy is the latest Amazon predefined SSL policy",
        "name": "description"
      },
      {
        "type": "PLA-1366",
        "value": "Information",
        "name": "category"
      },
      {
        "type": "PLA-1366",
        "value": "None.",
        "name": "suggested_action"
      },
      {
        "type": "PLA-1366",
        "value": [],
        "name": "call_modifiers"
      },
      {
        "type": "PLA-1366",
        "value": [
          "load_balancer_descriptions.listener_descriptions.policy_names"
        ],
        "name": "audit_objects"
      }
    ],
    "executionTime": 1.399043745,
    "executionNumber": 3,
    "engineStatus": "OK",
    "dataType": "ADVISOR_RESOURCE",
    "_id": "5829859bd43b2e279ae998d5"
  },
  {
    "timestamp": "2016-11-14T09:36:39.000Z",
    "stackName": "AUDIT-AWS-ELB-TEST-DEFAULT",
    "runId": "a8ad4c59-2504-4711-8102-2e5eae0f6660",
    "resourceType": "coreo_aws_advisor_elb",
    "resourceName": "advise-elb",
    "resourceId": "f5f39964e3fecf80479dda38af3f100c372d4bf0281ef0c1975c92548edb8981",
    "outputs": [

      {
        "value": "error-elb",
        "name": "error"
      },
      {
        "value": 0,
        "name": "number_ignored_violations"
      },
      {
        "value": 0,
        "name": "number_violations"
      },
      {
        "value": 2,
        "name": "number_checks"
      },
      {
        "value": "{}",
        "name": "report"
      }
    ],
    "namespace": "ROOT::AUDIT-AWS-ELB-TEST-DEFAULT",
    "inputs": [
      {
        "type": "choice",
        "value": "advise",
        "name": "action"
      },
      {
        "type": "PLA-1366",
        "value": [
          "us-east-1",
          "us-west-1",
          "us-west-2",
          "eu-west-1"
        ],
        "name": "regions"
      },
      {
        "type": "PLA-1366",
        "value": [
          "elb-old-ssl-policy"
        ],
        "name": "alerts"
      }
    ],
    "executionTime": 8.478470571,
    "executionNumber": 4,
    "engineStatus": "OK",
    "dataType": "ADVISOR_RESOURCE",
    "_id": "582985a9d43b2e279ae998d6"
  },
  {
    "timestamp": "2016-11-14T09:36:56.000Z",
    "stackName": "AUDIT-AWS-ELB-TEST-DEFAULT",
    "runId": "a8ad4c59-2504-4711-8102-2e5eae0f6660",
    "resourceType": "coreo_uni_util_notify",
    "resourceName": "advise-elb",
    "resourceId": "12c1274196fbcf42e5d9d3ec55c8ecaae6e192a4e83a5174d060dbceadb2961e",
    "outputs": [
      {
        "value": "error-elb",
        "name": "error"
      }
    ],
    "namespace": "ROOT::AUDIT-AWS-ELB-TEST-DEFAULT",
    "inputs": [
      {
        "type": "choice",
        "value": "notify",
        "name": "action"
      },
      {
        "type": "PLA-1366",
        "value": "email",
        "name": "type"
      },
      {
        "type": "PLA-1366",
        "value": "json",
        "name": "payload_type"
      },
      {
        "type": "PLA-1366",
        "value": "{\"stack name\":\"audit-aws-elb\",\n  \"instance name\":\"test-default\",\n  \"number_of_checks\":\"2\",\n  \"number_of_violations\":\"0\",\n  \"number_violations_ignored\":\"0\",\n  \"violations\": {} }",
        "name": "payload"
      },
      {
        "type": "PLA-1366",
        "value": {
          "subject": "CloudCoreo elb advisor alerts on audit-aws-elb :: test-default",
          "to": "natalia@cloudcoreo.com"
        },
        "name": "endpoint"
      },
      {
        "type": "PLA-1366",
        "value": true,
        "name": "allow_empty"
      },
      {
        "type": "PLA-1366",
        "value": "always",
        "name": "send_on"
      }
    ],
    "executionTime": 14.221613615,
    "executionNumber": 5,
    "engineStatus": "OK",
    "dataType": "DEPLOY_RESOURCE",
    "_id": "582985b9d43b2e279ae998d7"
  },
  {
    "timestamp": "2016-11-14T09:37:08.000Z",
    "stackName": "audit-aws-elb-test-default",
    "runId": "a8ad4c59-2504-4711-8102-2e5eae0f6660",
    "resourceType": "coreo_uni_util_jsrunner",
    "resourceName": "tags-to-notifiers-array",
    "resourceId": "8793fe948819e6c295b835d4f7d9a1e40b0ddac296d813cfe31151714cf55e87",
    "outputs": [
      {
        "value": {
          "error_message": "Error running coreo_uni_util_jsrunner script:",
          "error_type": "RuntimeError",
          "resource_error": "action :run on coreo_uni_util_jsrunner[tags-to-notifiers-array]"
        },
        "name": "error"
      }
    ],
    "namespace": "ROOT::AUDIT-AWS-ELB-TEST-DEFAULT",
    "inputs": [
      {
        "type": "choice",
        "value": "run",
        "name": "action"
      },
      {
        "type": "PLA-1366",
        "value": "json",
        "name": "data_type"
      },
      {
        "type": "PLA-1366",
        "value": "{\"stack_name\":\"audit-aws-elb\",\n                \"instance_name\":\"test-default\",\n                \"violations\": {}}",
        "name": "json_input"
      },
      {
        "type": "PLA-1366",
        "value": "var tableify = require('tableify');\nvar style_section = \"<style>body {font-family :arial;padding : 0px;margin : 0px;}table {font-size: 10pt;border-top : black 1px solid;border-right : black 1px solid;/* border-spacing : 10px */border-collapse : collapse;}td, th {text-align : left;vertical-align : top;white-space: nowrap;overflow: hidden;text-overflow: ellipsis;border-left : black 1px solid;border-bottom: black 1px solid;padding-left : 4px;padding-right : 4px;}th {background-color : #aaaaaa;}td.number {color : blue}td.boolean {color : green;font-style : italic;}td.date {color : purple;}td.null:after {color : gray;font-style : italic;content : null;}</style>\";\npayloads = {};\nnotifiers = [];\nresults = json_input[\"violations\"];\nstack_name = json_input[\"stack_name\"];\ninstance_name = json_input[\"instance_name\"];\nfor (elb_id in results) {\n  ret_table = \"\";\n  tags_str = \"\";\n  tags = results[elb_id]['tags'];\n  for (var i = 0; i < tags.length; i++) {\n    this_tag_key = tags[i]['key'];\n    tags_str = tags_str + this_tag_key + \", \";\n  }\n  tags_str = tags_str.replace(/, $/, \"\");\n  found_owner_tag = false;\n  owner_tag_val = \"\";\n  if (owner_tag_val == \"\") {\n    owner_tag_val = \"NONE\";\n  }\n  for (var i = 0; i < tags.length; i++) {\n    if (tags[i]['key'] === 'NOT_A_TAG') {\n      found_owner_tag = true;\n      owner_tag_val = tags[i]['value'];\n    }\n  }\n\n  var violation_keys = Object.keys( results[elb_id][\"violations\"] );\n  for (var j = 0, length = violation_keys.length; j < length; j++) {\n    this_violation = results[elb_id][\"violations\"][violation_keys[j]];\n    this_rule_name = violation_keys[j];\n    region = this_violation[\"region\"];\n    violating_object = this_violation[\"violating_object\"];\n    if (typeof violating_object == \"undefined\" || violating_object === null){\n      violating_object = \"\";\n    }\n    if (typeof violating_object == \"object\") {\n      violating_object = \"\";\n    }\n    category = this_violation[\"category\"];\n    description = this_violation[\"description\"];\n    display_name = this_violation[\"display_name\"];\n    level = this_violation[\"level\"];\n    kb_link = this_violation[\"link\"];\n    action = this_violation[\"suggested_action\"];\n    aws_console = \"https://console.aws.amazon.com/ec2/v2/home?region=\" + region + \"#LoadBalancers:search=\" + elb_id + \"\";\n    aws_console_html = \"<a href=\" + aws_console + \">AWS Console</a>\";\n    violation_entry = '\"violating object\" : \"' + violating_object + '\", ';\n    if (violating_object == \"\") {\n      violation_entry = \"\";\n    }\n    ret_table =\n        '{' +\n        '\"ELB id\" : \"' + elb_id + '\", ' +\n        '\"region\" : \"' + region + '\", ' +\n        '\"aws link\" : \"' + aws_console_html + '\", ' +\n        violation_entry +\n        '\"aws tags\" : \"' + tags_str + '\"' +\n        '}';\n\n    if (typeof kb_link == \"undefined\" || kb_link === null){\n      kb_html = \"\";\n    } else {\n      kb_html = \"<a href=\" + kb_link + \">CloudCoreo Knowledge Base</a>\";\n    }\n    if (typeof display_name == \"undefined\" || display_name === null){\n      display_name = \"\";\n    }\n    if (typeof category == \"undefined\" || category === null){\n      category = \"\";\n    }\n    if (typeof action == \"undefined\" || action === null){\n      action = \"\";\n    }\n    if (typeof level == \"undefined\" || level === null){\n      level = \"\";\n    }\n    if (typeof description == \"undefined\" || description === null){\n      description = \"\";\n    }\n    ret_metadata =\n        '{' +\n        '\"display name\" : \"' + display_name + '\", ' +\n        '\"rule id\" : \"' + this_rule_name + '\", ' +\n        '\"category\" : \"' + category + '\", ' +\n        '\"kb link\" : \"' + kb_html + '\", ' +\n        '\"suggested action\" : \"' + action + '\", ' +\n        '\"level\" : \"' + level + '\", ' +\n        '\"description\" : \"' + description + '\"' +\n        '}';\n    if (!payloads.hasOwnProperty(owner_tag_val)) {\n      payloads[owner_tag_val] = {};\n    }\n    if (!payloads[owner_tag_val].hasOwnProperty(this_rule_name)) {\n      payloads[owner_tag_val][this_rule_name] = {};\n      payloads[owner_tag_val][this_rule_name][\"metadata\"] = [];\n      payloads[owner_tag_val][this_rule_name][\"objects\"] = [];\n    }\n    payloads[owner_tag_val][this_rule_name][\"metadata\"].push(ret_metadata);\n    payloads[owner_tag_val][this_rule_name][\"objects\"].push(ret_table);\n  }\n}\n\nfor (email in payloads) {\n  nviolations = 0;\n  var endpoint = {};\n  endpoint['to'] = email;\n  var notifier = {};\n  notifier['type'] = 'email';\n  notifier['send_on'] = 'always';\n  notifier['allow_empty'] = 'true';\n  notifier['payload_type'] = 'html';\n  notifier['endpoint'] = endpoint;\n  notifier['payload'] = \"\";\n  notifier['num_violations'] = \"\";\n\n  html_obj = \"\";\n  var alert_rule_keys = Object.getOwnPropertyNames( payloads[email] );\n  for (var j = 0, length = alert_rule_keys.length; j < length; j++) {\n    this_rule_violations = payloads[email][alert_rule_keys[j]][\"objects\"];\n    this_rule_metadata = payloads[email][alert_rule_keys[j]][\"metadata\"];\n\n    this_rule_name = alert_rule_keys[j];\n    nviolations = nviolations + this_rule_violations.length;\n\n    table_obj = this_rule_violations.join();\n    table_obj = \"[\" + table_obj + \"]\";\n    table_json_obj = JSON.parse(table_obj);\n    this_html_obj = tableify(table_json_obj);\n\n    table_obj_metadata = this_rule_metadata[0];\n    table_obj_metadata = \"[\" + table_obj_metadata + \"]\";\n    table_json_metadata_obj = JSON.parse(table_obj_metadata);\n    this_html_metadata_obj = tableify(table_json_metadata_obj);\n\n    html_obj = html_obj + this_html_metadata_obj + this_html_obj + '</br>';\n  }\n  html_obj = style_section + html_obj;\n\n  notifier['payload'] = html_obj;\n  notifier['num_violations'] = nviolations.toString();\n\n  if (email != \"NONE\") {\n    notifiers.push(notifier);\n  }\n\n}\ncallback(notifiers);\n",
        "name": "function"
      },
      {
        "type": "PLA-1366",
        "value": [
          {
            "version": "1.0.0",
            "name": "tableify"
          }
        ],
        "name": "packages"
      }
    ],
    "executionTime": 10.324371991,
    "executionNumber": 6,
    "engineStatus": "EXECUTION_ERROR",
    "dataType": "DEPLOY_RESOURCE",
    "_id": "582985c6d43b2e279ae998d8"
  }
]